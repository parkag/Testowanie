Projekt zespołowy z przedmiotu Testowanie Oprogramowania.
-----------------------------------

Testujemy algorytm znajdowania najbliższego sąsiada (Nearest Neighbor) opisany w książce "Algorytmy. Almanach" G.T. Heineman'a

Kod został pobrany z serwera ftp Helionu: ftp://ftp.helion.pl/przyklady/algalm.zip

Aktualny plan pracy:

1.  Wydzielenie potrzebnych fragmentów kodu i testów - algorytmy NearestNeighbor [GP - OK]

2.  Utworzenie zestawu istniejących testów struktury kdTree i algorytmów NearestNeighbor [GP - OK]

3.  Utworzenie zestawu testów dla algorytmu BruteForceNearestNeighbor
    * Testy białoskrzynkowe z miarą pokrycia kodu [DT - W trakcie]
    * Testy z wykorzystaniem obiektów pozornych [ ]

4.  Utworzenie zestawu testów dla struktury kdTree i klas wykorzystywanych w kodzie algorytmów 
    * Testy białoskrzynkowe z miarą pokrycia kodu [DT - W trakcie]
    * Testy z wykorzystaniem obiektów pozornych [ ]

5.  Utworzenie zestawu testów dla algorytmu NearestNeighbor działającego na kdTree
    * Testy białoskrzynkowe z miarą pokrycia kodu [DT - W trakcie]
    * Testy z wykorzystaniem obiektów pozornych [ ]

6.  Oprogramowanie wizualizacji [GP - OK]
    * napisanie testów czarnoskrzynkowych
    * instrukcja obsługi dla testerów

7.  Opisanie cyklu życia testów [GP - W trakcie 1/6]


Mamy tu dużo paczek, z których niewiele już możemy usunąć. Nasze paczki to:

   - Source Packages/gui
   - Test Packages/suites
   - Test Packages/(Tu będzie się działa znacząca większość naszej akcji)

Dalsze plany pracy oraz instrukcje dotyczące konfiguracji testów, prowadzenia dokumentacji będą zamieszczane w tym pliku.
